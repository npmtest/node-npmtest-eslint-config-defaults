{"/home/travis/build/npmtest/node-npmtest-eslint-config-defaults/test.js":"/* istanbul instrument in package npmtest_eslint_config_defaults */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-eslint-config-defaults/lib.npmtest_eslint_config_defaults.js":"/* istanbul instrument in package npmtest_eslint_config_defaults */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_eslint_config_defaults = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_eslint_config_defaults = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-eslint-config-defaults/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-eslint-config-defaults && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_eslint_config_defaults */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_eslint_config_defaults\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_eslint_config_defaults.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_eslint_config_defaults.rollup.js'] =\n            local.assetsDict['/assets.npmtest_eslint_config_defaults.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_eslint_config_defaults.__dirname + '/lib.npmtest_eslint_config_defaults.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-eslint-config-defaults/node_modules/eslint-config-defaults/configurations/eslint.js":"\"use strict\";\n\nmodule.exports = {\n  \"extends\": [\n    \"defaults/rules/eslint/best-practices/eslint\",\n    \"defaults/rules/eslint/errors/eslint\",\n    \"defaults/rules/eslint/es6/eslint\",\n    \"defaults/rules/eslint/node/eslint\",\n    \"defaults/rules/eslint/strict/eslint\",\n    \"defaults/rules/eslint/style/eslint\",\n    \"defaults/rules/eslint/variables/eslint\"\n  ],\n  \"parser\": \"espree\",\n  \"env\": {\n    \"browser\": false,\n    \"node\": false,\n    \"amd\": false,\n    \"mocha\": false,\n    \"jasmine\": false\n  },\n  \"ecmaFeatures\": {},\n  \"globals\": {},\n  \"rules\": {}\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-defaults/node_modules/eslint-config-defaults/configurations/google.js":"\"use strict\";\n\nmodule.exports = {\n  \"extends\": [\n    \"defaults/rules/eslint/best-practices/google\",\n    \"defaults/rules/eslint/errors/google\",\n    \"defaults/rules/eslint/es6/google\",\n    \"defaults/rules/eslint/node/google\",\n    \"defaults/rules/eslint/strict/google\",\n    \"defaults/rules/eslint/style/google\",\n    \"defaults/rules/eslint/variables/google\"\n  ],\n  \"env\": {},\n  \"ecmaFeatures\": {},\n  \"globals\": {},\n  \"rules\": {}\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-defaults/node_modules/eslint-config-defaults/configurations/gulp.js":"\"use strict\";\n\nmodule.exports = {\n  \"extends\": [\n    \"defaults/rules/eslint/best-practices/gulp\",\n    \"defaults/rules/eslint/errors/gulp\",\n    \"defaults/rules/eslint/es6/gulp\",\n    \"defaults/rules/eslint/node/gulp\",\n    \"defaults/rules/eslint/strict/gulp\",\n    \"defaults/rules/eslint/style/gulp\",\n    \"defaults/rules/eslint/variables/gulp\"\n  ],\n  \"env\": {},\n  \"ecmaFeatures\": {},\n  \"globals\": {},\n  \"rules\": {}\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-defaults/node_modules/eslint-config-defaults/configurations/node-runtime.js":"\"use strict\";\n\nmodule.exports = {\n  \"extends\": [\n    \"defaults/rules/eslint/best-practices/node-runtime\",\n    \"defaults/rules/eslint/errors/node-runtime\",\n    \"defaults/rules/eslint/es6/node-runtime\",\n    \"defaults/rules/eslint/node/node-runtime\",\n    \"defaults/rules/eslint/strict/node-runtime\",\n    \"defaults/rules/eslint/style/node-runtime\",\n    \"defaults/rules/eslint/variables/node-runtime\"\n  ],\n  \"env\": {},\n  \"ecmaFeatures\": {},\n  \"globals\": {},\n  \"rules\": {}\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-defaults/node_modules/eslint-config-defaults/configurations/off.js":"\"use strict\";\n\nmodule.exports = {\n  \"extends\": [\n    \"defaults/rules/eslint/best-practices/off\",\n    \"defaults/rules/eslint/errors/off\",\n    \"defaults/rules/eslint/es6/off\",\n    \"defaults/rules/eslint/node/off\",\n    \"defaults/rules/eslint/strict/off\",\n    \"defaults/rules/eslint/style/off\",\n    \"defaults/rules/eslint/variables/off\"\n  ],\n  \"env\": {},\n  \"ecmaFeatures\": {},\n  \"globals\": {},\n  \"rules\": {}\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-defaults/node_modules/eslint-config-defaults/configurations/airbnb/es5.js":"\"use strict\";\n\nmodule.exports = {\n  \"extends\": [\n    \"defaults/rules/eslint/best-practices/airbnb\",\n    \"defaults/rules/eslint/errors/airbnb\",\n    \"defaults/rules/eslint/node/airbnb\",\n    \"defaults/rules/eslint/strict/airbnb\",\n    \"defaults/rules/eslint/style/airbnb\",\n    \"defaults/rules/eslint/variables/airbnb\"\n  ],\n  \"parser\": \"babel-eslint\",\n  \"env\": {\n    \"browser\": true,\n    \"node\": true,\n    \"amd\": false,\n    \"mocha\": false,\n    \"jasmine\": false\n  },\n  \"ecmaFeatures\": {},\n  \"globals\": {},\n  \"rules\": {}\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-defaults/node_modules/eslint-config-defaults/configurations/airbnb/es6.js":"\"use strict\";\n\nmodule.exports = {\n  \"extends\": [\n    \"defaults/configurations/airbnb/es5\",\n    \"defaults/rules/eslint/es6/airbnb\"\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-defaults/node_modules/eslint-config-defaults/configurations/airbnb/es6-react.js":"\"use strict\";\n\nmodule.exports = {\n  \"extends\": [\n    \"defaults/configurations/airbnb/es6\",\n    \"defaults/rules/react/airbnb\"\n  ]\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-defaults/node_modules/eslint-config-defaults/configurations/walmart/es5-browser.js":"\"use strict\";\n\nmodule.exports = {\n  \"extends\": \"defaults/configurations/walmart/es5\",\n  \"env\": {\n    \"browser\": true\n  }\n};\n\n","/home/travis/build/npmtest/node-npmtest-eslint-config-defaults/node_modules/eslint-config-defaults/configurations/walmart/es5-node.js":"\"use strict\";\n\nmodule.exports = {\n  \"extends\": [\n    \"defaults/configurations/walmart/es5\",\n    \"defaults/rules/eslint/node/walmart\"\n  ],\n  \"rules\": {\n    \"strict\": [2, \"global\"]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-defaults/node_modules/eslint-config-defaults/configurations/walmart/es6-browser.js":"\"use strict\";\n\nmodule.exports = {\n  \"extends\": \"defaults/configurations/walmart/es6\",\n\n  \"env\": {\n    \"browser\": true\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-defaults/node_modules/eslint-config-defaults/configurations/walmart/es6-node.js":"\"use strict\";\n\nmodule.exports = {\n  \"extends\": [\n    \"defaults/configurations/walmart/es6\",\n    \"defaults/rules/eslint/node/walmart\"\n  ],\n  \"ecmaFeatures\": {\n    // Enable arrow functions\n    \"arrowFunctions\": true,\n    // Enable binary literals\n    \"binaryLiterals\": true,\n    // Enable let and const (aka block bindings)\n    \"blockBindings\": true,\n    // Enable classes\n    \"classes\": false,\n    // Enable default function parameters\n    \"defaultParams\": false,\n    // Enable destructuring\n    \"destructuring\": false,\n    // Enable for-of loops\n    \"forOf\": true,\n    // Enable generators\n    \"generators\": true,\n    // Enable modules and global strict mode\n    \"modules\": false,\n    // Enable computed object literal property names\n    \"objectLiteralComputedProperties\": true,\n    // Enable duplicate object literal properties in strict mode\n    \"objectLiteralDuplicateProperties\": false,\n    // Enable object literal shorthand methods\n    \"objectLiteralShorthandMethods\": true,\n    // Enable object literal shorthand properties\n    \"objectLiteralShorthandProperties\": true,\n    // Enable octal literals\n    \"octalLiterals\": true,\n    // Enable the regular expression u flag\n    \"regexUFlag\": true,\n    // Enable the regular expression y flag\n    \"regexYFlag\": true,\n    // Enable the rest parameters\n    \"restParams\": true,\n    // Enable the spread operator for arrays\n    \"spread\": true,\n    // Enable super references inside of functions\n    \"superInFunctions\": false,\n    // Enable template strings\n    \"templateStrings\": true,\n    // Enable code point escapes\n    \"unicodeCodePointEscapes\": true,\n    // Allow return statements in the global scope\n    \"globalReturn\": false,\n    // Enable JSX\n    \"jsx\": false,\n    // Enable support for the experimental object rest/spread properties (IMPORTANT: This is an experimental feature that may change significantly in the future. It's recommended that you do not write rules relying on this functionality unless you are willing to incur maintenance cost when it changes.)\n    \"experimentalObjectRestSpread\": false\n  },\n  rules: {\n    // verify super() callings in constructors\n    \"constructor-super\": 0,\n    // disallow modifying variables of class declarations\n    \"no-class-assign\": 0,\n    // disallow modifying variables that are declared using const\n    \"no-dupe-class-members\": 0,\n    // disallow to use this/super before super() calling in constructors.\n    \"no-this-before-super\": 0,\n    // suggest using Reflect methods where applicable\n    \"prefer-reflect\": 0\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-defaults/node_modules/eslint-config-defaults/rules/filenames/walmart.js":"\"use strict\";\n\nmodule.exports = {\n  \"plugins\": [\n    \"filenames\"\n  ],\n  \"rules\": {\n    // Enforce dash-cased filenames\n    \"filenames/filenames\": [2, \"^[a-z0-9\\\\-\\\\.]+$\"]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-defaults/node_modules/eslint-config-defaults/rules/react/airbnb.js":"\"use strict\";\n\nmodule.exports = {\n  \"parser\": \"babel-eslint\",\n  \"plugins\": [\n    \"react\"\n  ],\n  \"ecmaFeatures\": {\n    \"jsx\": false\n  },\n  \"rules\": {\n    // Prevent missing displayName in a React component definition\n    \"react/display-name\": [0, { \"acceptTranspilerName\": false }],\n    // Forbid certain propTypes\n    \"react/forbid-prop-types\": [0, { \"forbid\": [\"any\", \"array\", \"object\"] }],\n    // Enforce boolean attributes notation in JSX\n    \"react/jsx-boolean-value\": [2, \"never\"],\n    // Validate closing bracket location in JSX\n    \"react/jsx-closing-bracket-location\": [2, \"line-aligned\"],\n    // Enforce or disallow spaces inside of curly braces in JSX attributes\n    \"react/jsx-curly-spacing\": [0, \"never\", { \"allowMultiline\": true }],\n    // Enforce event handler naming conventions in JSX\n    \"react/jsx-handler-names\": [0, {\n      \"eventHandlerPrefix\": \"handle\",\n      \"eventHandlerPropPrefix\": \"on\"\n    }],\n    // Validate props indentation in JSX\n    \"react/jsx-indent-props\": [2, 2],\n    // Validate JSX has key prop when in array or iterator\n    \"react/jsx-key\": 0,\n    // Limit maximum of props on a single line in JSX\n    \"react/jsx-max-props-per-line\": [0, { \"maximum\": 1 }],\n    // Prevent usage of .bind() and arrow functions in JSX props\n    \"react/jsx-no-bind\": 2,\n    // Prevent duplicate props in JSX\n    \"react/jsx-no-duplicate-props\": [0, { \"ignoreCase\": false }],\n    // Prevent usage of isMounted\n    \"react/no-is-mounted\": 2,\n    // Prevent usage of unwrapped JSX strings\n    \"react/jsx-no-literals\": 0,\n    // Disallow undeclared variables in JSX\n    \"react/jsx-no-undef\": 2,\n    // Enforce PascalCase for user-defined JSX components\n    \"react/jsx-pascal-case\": 0,\n    // Enforce quote style for JSX attributes\n    \"react/jsx-quotes\": 0,\n    // Enforce propTypes declarations alphabetical sorting\n    \"react/jsx-sort-prop-types\": [0, {\n      \"ignoreCase\": false,\n      \"callbacksLast\": false\n    }],\n    // Enforce props alphabetical sorting\n    \"react/jsx-sort-props\": [0, {\n      \"ignoreCase\": false,\n      \"callbacksLast\": false\n    }],\n    // Prevent React to be incorrectly marked as unused\n    \"react/jsx-uses-react\": [2, { \"pragma\": \"React\" }],\n    // Prevent variables used in JSX to be incorrectly marked as unused\n    \"react/jsx-uses-vars\": 2,\n    // Prevent usage of dangerous JSX properties\n    \"react/no-danger\": 0,\n    // Prevent usage of deprecated methods\n    \"react/no-deprecated\": [1, { \"react\": \"0.14.0\" }],\n    // Prevent usage of setState in componentDidMount\n    \"react/no-did-mount-set-state\": [2, \"allow-in-func\"],\n    // Prevent usage of setState in componentDidUpdate\n    \"react/no-did-update-set-state\": [2, \"allow-in-func\"],\n    // Prevent direct mutation of this.state\n    \"react/no-direct-mutation-state\": 0,\n    // Prevent multiple component definition per file\n    \"react/no-multi-comp\": [2, { \"ignoreStateless\": true }],\n    // Prevent usage of setState\n    \"react/no-set-state\": 0,\n    // Prevent using string references in ref attribute.\n    \"react/no-string-refs\": 0,\n    // Prevent usage of unknown DOM property\n    \"react/no-unknown-property\": 0,\n    // Enforce ES5 or ES6 class for React Components\n    \"react/prefer-es6-class\": [2, \"always\"],\n    // Prevent missing props validation in a React component definition\n    \"react/prop-types\": [2, { \"ignore\": [], \"customValidators\": [] }],\n    // Prevent missing React when using JSX\n    \"react/react-in-jsx-scope\": 2,\n    // Restrict file extensions that may be required\n    \"react/require-extension\": [0, { \"extensions\": [\".jsx\"] }],\n    // Prevent extra closing tags for components without children\n    \"react/self-closing-comp\": 2,\n    // Enforce component methods order\n    \"react/sort-comp\": [2, {\n      \"order\": [\n        \"lifecycle\",\n        \"/^on.+$/\",\n        \"/^(get|set)(?!(InitialState$|DefaultProps$|ChildContext$)).+$/\",\n        \"everything-else\",\n        \"/^render.+$/\",\n        \"render\"\n      ]\n    }],\n    // Prevent missing parentheses around multilines JSX\n    \"react/wrap-multilines\": [2, {\n      declaration: true,\n      assignment: true,\n      return: true\n    }]\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-eslint-config-defaults/node_modules/eslint-config-defaults/rules/eslint/best-practices/eslint.js":"\"use strict\";\n\nmodule.exports = {\n  \"rules\": {\n    // Enforces getter/setter pairs in objects\n    \"accessor-pairs\": 0,\n    // treat var statements as if they were block scoped\n    \"block-scoped-var\": 0,\n    // specify the maximum cyclomatic complexity allowed in a program\n    \"complexity\": [0, 11],\n    // require return statements to either always or never specify values\n    \"consistent-return\": 0,\n    // specify curly brace conventions for all control statements\n    \"curly\": [0, \"all\"],\n    // require default case in switch statements\n    \"default-case\": 0,\n    // enforces consistent newlines before or after dots\n    \"dot-location\": 0,\n    // encourages use of dot notation whenever possible\n    \"dot-notation\": [0, { \"allowKeywords\": true }],\n    // require the use of === and !==\n    \"eqeqeq\": 0,\n    // make sure for-in loops have an if statement\n    \"guard-for-in\": 0,\n    // disallow the use of alert, confirm, and prompt\n    \"no-alert\": 0,\n    // disallow use of arguments.caller or arguments.callee\n    \"no-caller\": 0,\n    // disallow lexical declarations in case clauses\n    \"no-case-declarations\": 0,\n    // disallow division operators explicitly at beginning of regular expression\n    \"no-div-regex\": 0,\n    // disallow else after a return in an if\n    \"no-else-return\": 0,\n    // disallow use of labels for anything other then loops and switches\n    \"no-empty-label\": 0,\n    // disallow use of empty destructuring patterns\n    \"no-empty-pattern\": 0,\n    // disallow comparisons to null without a type-checking operator\n    \"no-eq-null\": 0,\n    // disallow use of eval()\n    \"no-eval\": 0,\n    // disallow adding to native types\n    \"no-extend-native\": 0,\n    // disallow unnecessary function binding\n    \"no-extra-bind\": 0,\n    // disallow fallthrough of case statements\n    \"no-fallthrough\": 2,\n    // disallow the use of leading or trailing decimal points in numeric literals\n    \"no-floating-decimal\": 0,\n    // disallow the type conversions with shorter notations\n    \"no-implicit-coercion\": 0,\n    // disallow use of eval()-like methods\n    \"no-implied-eval\": 0,\n    // disallow this keywords outside of classes or class-like objects\n    \"no-invalid-this\": 0,\n    // disallow usage of __iterator__ property\n    \"no-iterator\": 0,\n    // disallow use of labeled statements\n    \"no-labels\": 0,\n    // disallow unnecessary nested blocks\n    \"no-lone-blocks\": 0,\n    // disallow creation of functions within loops\n    \"no-loop-func\": 0,\n    // disallow the use of magic numbers\n    \"no-magic-numbers\": 0,\n    // disallow use of multiple spaces\n    \"no-multi-spaces\": 0,\n    // disallow use of multiline strings\n    \"no-multi-str\": 0,\n    // disallow reassignments of native objects\n    \"no-native-reassign\": 0,\n    // disallow use of new operator for Function object\n    \"no-new-func\": 0,\n    // disallows creating new instances of String,Number, and Boolean\n    \"no-new-wrappers\": 0,\n    // disallow use of new operator when not part of the assignment or comparison\n    \"no-new\": 0,\n    // disallow use of octal escape sequences in string literals, such as\n    // var foo = \"Copyright \\251\";\n    \"no-octal-escape\": 0,\n    // disallow use of (old style) octal literals\n    \"no-octal\": 2,\n    // disallow reassignment of function parameters\n    \"no-param-reassign\": 0,\n    // disallow use of process.env\n    \"no-process-env\": 0,\n    // disallow usage of __proto__ property\n    \"no-proto\": 0,\n    // disallow declaring the same variable more then once\n    \"no-redeclare\": 2,\n    // disallow use of assignment in return statement\n    \"no-return-assign\": 0,\n    // disallow use of `javascript:` urls.\n    \"no-script-url\": 0,\n    // disallow comparisons where both sides are exactly the same\n    \"no-self-compare\": 0,\n    // disallow use of comma operator\n    \"no-sequences\": 0,\n    // restrict what can be thrown as an exception\n    \"no-throw-literal\": 0,\n    // disallow usage of expressions in statement position\n    \"no-unused-expressions\": 0,\n    // disallow unnecessary .call() and .apply()\n    \"no-useless-call\": 0,\n    // disallow unnecessary concatenation of literals or template literals\n    \"no-useless-concat\": 0,\n    // disallow use of void operator\n    \"no-void\": 0,\n    // disallow usage of configurable warning terms in comments: e.g. todo\n    \"no-warning-comments\": [0, { \"terms\": [\"todo\", \"fixme\", \"xxx\"], \"location\": \"start\" }],\n    // disallow use of the with statement\n    \"no-with\": 0,\n    // require use of the second argument for parseInt()\n    \"radix\": 0,\n    // requires to declare all vars on top of their containing scope\n    \"vars-on-top\": 0,\n    // require immediate function invocation to be wrapped in parentheses\n    \"wrap-iife\": 0,\n    // require or disallow Yoda conditions\n    \"yoda\": [0, \"never\"]\n  }\n};\n"}